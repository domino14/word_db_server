// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: wordvault/api.proto

package wordvault

import (
	wordsearcher "github.com/domino14/word_db_server/rpc/api/wordsearcher"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Score int32

const (
	Score_SCORE_NONE  Score = 0
	Score_SCORE_AGAIN Score = 1
	Score_SCORE_HARD  Score = 2
	Score_SCORE_GOOD  Score = 3
	Score_SCORE_EASY  Score = 4
)

// Enum value maps for Score.
var (
	Score_name = map[int32]string{
		0: "SCORE_NONE",
		1: "SCORE_AGAIN",
		2: "SCORE_HARD",
		3: "SCORE_GOOD",
		4: "SCORE_EASY",
	}
	Score_value = map[string]int32{
		"SCORE_NONE":  0,
		"SCORE_AGAIN": 1,
		"SCORE_HARD":  2,
		"SCORE_GOOD":  3,
		"SCORE_EASY":  4,
	}
)

func (x Score) Enum() *Score {
	p := new(Score)
	*p = x
	return p
}

func (x Score) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Score) Descriptor() protoreflect.EnumDescriptor {
	return file_wordvault_api_proto_enumTypes[0].Descriptor()
}

func (Score) Type() protoreflect.EnumType {
	return &file_wordvault_api_proto_enumTypes[0]
}

func (x Score) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Score.Descriptor instead.
func (Score) EnumDescriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{0}
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lexicon      string                  `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Alphagram    *wordsearcher.Alphagram `protobuf:"bytes,2,opt,name=alphagram,proto3" json:"alphagram,omitempty"`
	CardJsonRepr []byte                  `protobuf:"bytes,3,opt,name=card_json_repr,json=cardJsonRepr,proto3" json:"card_json_repr,omitempty"`
	// The retrievability of a card is not part of the json repr and is computed
	// as of the time of request.
	Retrievability float64 `protobuf:"fixed64,4,opt,name=retrievability,proto3" json:"retrievability,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{0}
}

func (x *Card) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *Card) GetAlphagram() *wordsearcher.Alphagram {
	if x != nil {
		return x.Alphagram
	}
	return nil
}

func (x *Card) GetCardJsonRepr() []byte {
	if x != nil {
		return x.CardJsonRepr
	}
	return nil
}

func (x *Card) GetRetrievability() float64 {
	if x != nil {
		return x.Retrievability
	}
	return 0
}

type GetCardInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lexicon    string   `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Alphagrams []string `protobuf:"bytes,2,rep,name=alphagrams,proto3" json:"alphagrams,omitempty"`
}

func (x *GetCardInfoRequest) Reset() {
	*x = GetCardInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardInfoRequest) ProtoMessage() {}

func (x *GetCardInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCardInfoRequest) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetCardInfoRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *GetCardInfoRequest) GetAlphagrams() []string {
	if x != nil {
		return x.Alphagrams
	}
	return nil
}

type GetNextScheduledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lexicon string `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Limit   int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetNextScheduledRequest) Reset() {
	*x = GetNextScheduledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextScheduledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextScheduledRequest) ProtoMessage() {}

func (x *GetNextScheduledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextScheduledRequest.ProtoReflect.Descriptor instead.
func (*GetNextScheduledRequest) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetNextScheduledRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *GetNextScheduledRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Cards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *Cards) Reset() {
	*x = Cards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cards) ProtoMessage() {}

func (x *Cards) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cards.ProtoReflect.Descriptor instead.
func (*Cards) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{3}
}

func (x *Cards) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ScoreCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score     Score  `protobuf:"varint,1,opt,name=score,proto3,enum=wordvault.Score" json:"score,omitempty"`
	Lexicon   string `protobuf:"bytes,2,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Alphagram string `protobuf:"bytes,3,opt,name=alphagram,proto3" json:"alphagram,omitempty"`
}

func (x *ScoreCardRequest) Reset() {
	*x = ScoreCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreCardRequest) ProtoMessage() {}

func (x *ScoreCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreCardRequest.ProtoReflect.Descriptor instead.
func (*ScoreCardRequest) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{4}
}

func (x *ScoreCardRequest) GetScore() Score {
	if x != nil {
		return x.Score
	}
	return Score_SCORE_NONE
}

func (x *ScoreCardRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *ScoreCardRequest) GetAlphagram() string {
	if x != nil {
		return x.Alphagram
	}
	return ""
}

type ScoreCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextScheduled *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=next_scheduled,json=nextScheduled,proto3" json:"next_scheduled,omitempty"`
}

func (x *ScoreCardResponse) Reset() {
	*x = ScoreCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreCardResponse) ProtoMessage() {}

func (x *ScoreCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreCardResponse.ProtoReflect.Descriptor instead.
func (*ScoreCardResponse) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{5}
}

func (x *ScoreCardResponse) GetNextScheduled() *timestamppb.Timestamp {
	if x != nil {
		return x.NextScheduled
	}
	return nil
}

type AddCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lexicon   string `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Alphagram string `protobuf:"bytes,2,opt,name=alphagram,proto3" json:"alphagram,omitempty"`
}

func (x *AddCardRequest) Reset() {
	*x = AddCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardRequest) ProtoMessage() {}

func (x *AddCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardRequest.ProtoReflect.Descriptor instead.
func (*AddCardRequest) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{6}
}

func (x *AddCardRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *AddCardRequest) GetAlphagram() string {
	if x != nil {
		return x.Alphagram
	}
	return ""
}

type AddCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCardResponse) Reset() {
	*x = AddCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardResponse) ProtoMessage() {}

func (x *AddCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardResponse.ProtoReflect.Descriptor instead.
func (*AddCardResponse) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{7}
}

type AddCardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lexicon    string   `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Alphagrams []string `protobuf:"bytes,2,rep,name=alphagrams,proto3" json:"alphagrams,omitempty"`
}

func (x *AddCardsRequest) Reset() {
	*x = AddCardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardsRequest) ProtoMessage() {}

func (x *AddCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardsRequest.ProtoReflect.Descriptor instead.
func (*AddCardsRequest) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{8}
}

func (x *AddCardsRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *AddCardsRequest) GetAlphagrams() []string {
	if x != nil {
		return x.Alphagrams
	}
	return nil
}

type AddCardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCardsResponse) Reset() {
	*x = AddCardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardsResponse) ProtoMessage() {}

func (x *AddCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardsResponse.ProtoReflect.Descriptor instead.
func (*AddCardsResponse) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{9}
}

type EditLastScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lexicon      string `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	Alphagram    string `protobuf:"bytes,2,opt,name=alphagram,proto3" json:"alphagram,omitempty"`
	NewScore     Score  `protobuf:"varint,3,opt,name=new_score,json=newScore,proto3,enum=wordvault.Score" json:"new_score,omitempty"`
	LastCardRepr []byte `protobuf:"bytes,4,opt,name=last_card_repr,json=lastCardRepr,proto3" json:"last_card_repr,omitempty"`
}

func (x *EditLastScoreRequest) Reset() {
	*x = EditLastScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wordvault_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditLastScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditLastScoreRequest) ProtoMessage() {}

func (x *EditLastScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wordvault_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditLastScoreRequest.ProtoReflect.Descriptor instead.
func (*EditLastScoreRequest) Descriptor() ([]byte, []int) {
	return file_wordvault_api_proto_rawDescGZIP(), []int{10}
}

func (x *EditLastScoreRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *EditLastScoreRequest) GetAlphagram() string {
	if x != nil {
		return x.Alphagram
	}
	return ""
}

func (x *EditLastScoreRequest) GetNewScore() Score {
	if x != nil {
		return x.NewScore
	}
	return Score_SCORE_NONE
}

func (x *EditLastScoreRequest) GetLastCardRepr() []byte {
	if x != nil {
		return x.LastCardRepr
	}
	return nil
}

var File_wordvault_api_proto protoreflect.FileDescriptor

var file_wordvault_api_proto_rawDesc = []byte{
	0x0a, 0x13, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5,
	0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x78, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x67,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x49, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x2e, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x6f, 0x72, 0x64,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x22, 0x72, 0x0a, 0x10, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x67, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x56, 0x0a, 0x11, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x22, 0x48, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x14,
	0x45, 0x64, 0x69, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x78, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x09,
	0x6e, 0x65, 0x77, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x72, 0x2a, 0x58, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x43,
	0x4f, 0x52, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x43,
	0x4f, 0x52, 0x45, 0x5f, 0x41, 0x47, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x43, 0x4f, 0x52, 0x45, 0x5f, 0x48, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x43, 0x4f, 0x52, 0x45, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x43, 0x4f, 0x52, 0x45, 0x5f, 0x45, 0x41, 0x53, 0x59, 0x10, 0x04, 0x32, 0xcc, 0x03, 0x0a, 0x10,
	0x57, 0x6f, 0x72, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x4d, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x12, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x46, 0x0a, 0x09, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76,
	0x61, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19,
	0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x64,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x93, 0x01, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x2e, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x08, 0x41, 0x70,
	0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x31, 0x34, 0x2f, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x64, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0xa2, 0x02,
	0x03, 0x57, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0xca, 0x02, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0xe2, 0x02, 0x15, 0x57,
	0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wordvault_api_proto_rawDescOnce sync.Once
	file_wordvault_api_proto_rawDescData = file_wordvault_api_proto_rawDesc
)

func file_wordvault_api_proto_rawDescGZIP() []byte {
	file_wordvault_api_proto_rawDescOnce.Do(func() {
		file_wordvault_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_wordvault_api_proto_rawDescData)
	})
	return file_wordvault_api_proto_rawDescData
}

var file_wordvault_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wordvault_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_wordvault_api_proto_goTypes = []interface{}{
	(Score)(0),                      // 0: wordvault.Score
	(*Card)(nil),                    // 1: wordvault.Card
	(*GetCardInfoRequest)(nil),      // 2: wordvault.GetCardInfoRequest
	(*GetNextScheduledRequest)(nil), // 3: wordvault.GetNextScheduledRequest
	(*Cards)(nil),                   // 4: wordvault.Cards
	(*ScoreCardRequest)(nil),        // 5: wordvault.ScoreCardRequest
	(*ScoreCardResponse)(nil),       // 6: wordvault.ScoreCardResponse
	(*AddCardRequest)(nil),          // 7: wordvault.AddCardRequest
	(*AddCardResponse)(nil),         // 8: wordvault.AddCardResponse
	(*AddCardsRequest)(nil),         // 9: wordvault.AddCardsRequest
	(*AddCardsResponse)(nil),        // 10: wordvault.AddCardsResponse
	(*EditLastScoreRequest)(nil),    // 11: wordvault.EditLastScoreRequest
	(*wordsearcher.Alphagram)(nil),  // 12: wordsearcher.Alphagram
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
}
var file_wordvault_api_proto_depIdxs = []int32{
	12, // 0: wordvault.Card.alphagram:type_name -> wordsearcher.Alphagram
	1,  // 1: wordvault.Cards.cards:type_name -> wordvault.Card
	0,  // 2: wordvault.ScoreCardRequest.score:type_name -> wordvault.Score
	13, // 3: wordvault.ScoreCardResponse.next_scheduled:type_name -> google.protobuf.Timestamp
	0,  // 4: wordvault.EditLastScoreRequest.new_score:type_name -> wordvault.Score
	2,  // 5: wordvault.WordVaultService.GetCardInformation:input_type -> wordvault.GetCardInfoRequest
	3,  // 6: wordvault.WordVaultService.GetNextScheduled:input_type -> wordvault.GetNextScheduledRequest
	5,  // 7: wordvault.WordVaultService.ScoreCard:input_type -> wordvault.ScoreCardRequest
	11, // 8: wordvault.WordVaultService.EditLastScore:input_type -> wordvault.EditLastScoreRequest
	7,  // 9: wordvault.WordVaultService.AddCard:input_type -> wordvault.AddCardRequest
	9,  // 10: wordvault.WordVaultService.AddCards:input_type -> wordvault.AddCardsRequest
	4,  // 11: wordvault.WordVaultService.GetCardInformation:output_type -> wordvault.Cards
	4,  // 12: wordvault.WordVaultService.GetNextScheduled:output_type -> wordvault.Cards
	6,  // 13: wordvault.WordVaultService.ScoreCard:output_type -> wordvault.ScoreCardResponse
	6,  // 14: wordvault.WordVaultService.EditLastScore:output_type -> wordvault.ScoreCardResponse
	8,  // 15: wordvault.WordVaultService.AddCard:output_type -> wordvault.AddCardResponse
	10, // 16: wordvault.WordVaultService.AddCards:output_type -> wordvault.AddCardsResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_wordvault_api_proto_init() }
func file_wordvault_api_proto_init() {
	if File_wordvault_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wordvault_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextScheduledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wordvault_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditLastScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wordvault_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wordvault_api_proto_goTypes,
		DependencyIndexes: file_wordvault_api_proto_depIdxs,
		EnumInfos:         file_wordvault_api_proto_enumTypes,
		MessageInfos:      file_wordvault_api_proto_msgTypes,
	}.Build()
	File_wordvault_api_proto = out.File
	file_wordvault_api_proto_rawDesc = nil
	file_wordvault_api_proto_goTypes = nil
	file_wordvault_api_proto_depIdxs = nil
}
