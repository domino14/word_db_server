# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
orbs:
  discord: antonioned/discord@0.1.0
jobs:
  build:
    environment:
      LEXICON_PATH: /opt/lexica/
      LETTER_DISTRIBUTION_PATH: /opt/lexica/letterdistributions
    docker:
      # specify the version
      - image: golang:alpine

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/domino14/word_db_server
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "bf:37:1b:e1:b2:b0:ec:20:92:43:20:86:40:7c:c4:e0"
      - run:
          name: Install git, ssh, and build-base (for tests)
          command: apk update && apk upgrade && apk add git openssh build-base bash
      - run:
          name: Install ssl
          command: apk add --update ca-certificates openssl && update-ca-certificates
      - run:
          name: Install curl
          command: apk --no-cache add curl
      - run: if [ ! -n "$(grep "^github.com " ~/.ssh/known_hosts)" ]; then ssh-keyscan github.com >> ~/.ssh/known_hosts 2>/dev/null; fi
      - run:
          name: Clone lexicon repo
          command: git clone git@github.com:domino14/word-game-lexica /opt/word-game-lexica
      - run: mkdir $LEXICON_PATH
      - run: mv /opt/word-game-lexica/*.txt $LEXICON_PATH
      - run: mv /opt/word-game-lexica/letterdistributions $LETTER_DISTRIBUTION_PATH
      - run: cd cmd/searchserver && go build
      # Generate the db for NWL18.txt. If we add other dbs for testing, we
      # will need to generate those as well.
      - run: mkdir $LEXICON_PATH/db
      - run: mkdir $LEXICON_PATH/gaddag
      - run: cd cmd/dbmaker && go build
      - run: ./cmd/dbmaker/dbmaker -outputdir $LEXICON_PATH/db -dbs NWL18

      # specify any bash command here prefixed with `run: `
      - run: go test -v ./...
      - discord/status: &discord-webhook-setting
          webhook: "${DISCORD_WEBHOOK}"
          success_message: ":tada: A $CIRCLE_JOB job has succeeded! (Branch: $CIRCLE_BRANCH)"
          failure_message: ":red_circle: A $CIRCLE_JOB job has failed! (Branch: $CIRCLE_BRANCH)"

  build_docker:
    working_directory: /go/src/github.com/domino14/word_db_server
    environment:
      REPO: /go/src/github.com/domino14/word_db_server
    docker:
      - image: golang:alpine
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install curl
          command: apk --no-cache add curl bash
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.12.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build and push Docker images to Dockerhub
          command: |
            cd $REPO && \
              docker build -t domino14/word_db_server:$CIRCLE_SHA1 \
                -t domino14/word_db_server:latest .

            docker login --username domino14 --password $DOCKER_PASSWORD
            docker push domino14/word_db_server:$CIRCLE_SHA1
            docker push domino14/word_db_server:latest
      - discord/status: *discord-webhook-setting

  deploy:
    working_directory: /opt/
    environment:
      # This will get created by the clone below.
      KUBECONFIG: /opt/webolith-private/admin.conf
    docker:
      - image: domino14/aerolith-deployer
    steps:
      - add_ssh_keys:
          fingerprints:
            # This is the k8s-deploy-key fingerprint
            - "84:74:a3:ce:d0:4e:9d:f5:ab:74:ed:10:15:9a:81:2b"
      - run: if [ ! -n "$(grep "^github.com " ~/.ssh/known_hosts)" ]; then ssh-keyscan github.com >> ~/.ssh/known_hosts 2>/dev/null; fi
      - run: git clone git@github.com:domino14/aerolith-k8s
      - run: doctl kubernetes cluster kubeconfig save k8s-1-24-4-do-0-nyc1-1666148172372
      - run: cd aerolith-k8s && inv deploy-wdb-server
      - discord/status: *discord-webhook-setting

workflows:
  version: 2
  build_app:
    jobs:
      - build
      - build_docker:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_docker
          filters:
            branches:
              only: master
